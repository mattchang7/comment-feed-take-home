{"ast":null,"code":"var _jsxFileName = \"/Users/mattchang/Documents/Development/front-end-cyoa-take-home/frontend/src/components/Comment.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Comment = ({\n  comment,\n  last\n}) => {\n  // Dates are created as DateTime strings in UTC+00:00, so that must be accounted for when creating the date in the client\n  const date = new Date(comment.created + \" GMT+00:00\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full flex flex-col items-center px-3\",\n    \"data-testid\": `todo-${comment.id}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full my-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-zinc-400\",\n        children: [comment.name[0].toUpperCase() + comment.name.slice(1), \" on\", \" \", `${date.toLocaleString(undefined, {\n          month: \"short\",\n          day: \"numeric\"\n        })} at ${date.getHours() > 12 ? `${date.getHours() - 12}:${date.getMinutes() < 10 ? \"0\" + date.getMinutes() : date.getMinutes()} PM` : `${date.getHours()}:${date.getMinutes() < 10 ? \"0\" + date.getMinutes() : date.getMinutes()} AM`}`]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: comment.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), !last && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"h-[1px] bg-zinc-600 w-full\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this)]\n  }, comment.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n};\n_c = Comment;\nexport default Comment;\nvar _c;\n$RefreshReg$(_c, \"Comment\");","map":{"version":3,"names":["Comment","comment","last","date","Date","created","_jsxDEV","className","id","children","name","toUpperCase","slice","toLocaleString","undefined","month","day","getHours","getMinutes","fileName","_jsxFileName","lineNumber","columnNumber","message","_c","$RefreshReg$"],"sources":["/Users/mattchang/Documents/Development/front-end-cyoa-take-home/frontend/src/components/Comment.jsx"],"sourcesContent":["const Comment = ({ comment, last }) => {\n  // Dates are created as DateTime strings in UTC+00:00, so that must be accounted for when creating the date in the client\n  const date = new Date(comment.created + \" GMT+00:00\");\n  return (\n    <div\n      key={comment.id}\n      className=\"w-full flex flex-col items-center px-3\"\n      data-testid={`todo-${comment.id}`}\n    >\n      <div className=\"w-full my-2\">\n        <div className=\"text-zinc-400\">\n          {comment.name[0].toUpperCase() + comment.name.slice(1)} on{\" \"}\n          {`${date.toLocaleString(undefined, {\n            month: \"short\",\n            day: \"numeric\",\n          })} at ${\n            date.getHours() > 12\n              ? `${date.getHours() - 12}:${\n                  date.getMinutes() < 10\n                    ? \"0\" + date.getMinutes()\n                    : date.getMinutes()\n                } PM`\n              : `${date.getHours()}:${\n                  date.getMinutes() < 10\n                    ? \"0\" + date.getMinutes()\n                    : date.getMinutes()\n                } AM`\n          }`}\n        </div>\n        <div>{comment.message}</div>\n      </div>\n      {!last && <div className=\"h-[1px] bg-zinc-600 w-full\" />}\n    </div>\n  );\n};\n\nexport default Comment;\n"],"mappings":";;AAAA,MAAMA,OAAO,GAAGA,CAAC;EAAEC,OAAO;EAAEC;AAAK,CAAC,KAAK;EACrC;EACA,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACH,OAAO,CAACI,OAAO,GAAG,YAAY,CAAC;EACrD,oBACEC,OAAA;IAEEC,SAAS,EAAC,wCAAwC;IAClD,eAAc,QAAON,OAAO,CAACO,EAAG,EAAE;IAAAC,QAAA,gBAElCH,OAAA;MAAKC,SAAS,EAAC,aAAa;MAAAE,QAAA,gBAC1BH,OAAA;QAAKC,SAAS,EAAC,eAAe;QAAAE,QAAA,GAC3BR,OAAO,CAACS,IAAI,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGV,OAAO,CAACS,IAAI,CAACE,KAAK,CAAC,CAAC,CAAC,EAAC,KAAG,EAAC,GAAG,EAC5D,GAAET,IAAI,CAACU,cAAc,CAACC,SAAS,EAAE;UACjCC,KAAK,EAAE,OAAO;UACdC,GAAG,EAAE;QACP,CAAC,CAAE,OACDb,IAAI,CAACc,QAAQ,CAAC,CAAC,GAAG,EAAE,GACf,GAAEd,IAAI,CAACc,QAAQ,CAAC,CAAC,GAAG,EAAG,IACtBd,IAAI,CAACe,UAAU,CAAC,CAAC,GAAG,EAAE,GAClB,GAAG,GAAGf,IAAI,CAACe,UAAU,CAAC,CAAC,GACvBf,IAAI,CAACe,UAAU,CAAC,CACrB,KAAI,GACJ,GAAEf,IAAI,CAACc,QAAQ,CAAC,CAAE,IACjBd,IAAI,CAACe,UAAU,CAAC,CAAC,GAAG,EAAE,GAClB,GAAG,GAAGf,IAAI,CAACe,UAAU,CAAC,CAAC,GACvBf,IAAI,CAACe,UAAU,CAAC,CACrB,KACN,EAAC;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNhB,OAAA;QAAAG,QAAA,EAAMR,OAAO,CAACsB;MAAO;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CAAC,EACL,CAACpB,IAAI,iBAAII,OAAA;MAAKC,SAAS,EAAC;IAA4B;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,GA1BnDrB,OAAO,CAACO,EAAE;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OA2BZ,CAAC;AAEV,CAAC;AAACE,EAAA,GAlCIxB,OAAO;AAoCb,eAAeA,OAAO;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}